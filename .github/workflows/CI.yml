name: CI

on:
  push:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  ubuntu-build:
    name: Linux CI
    strategy:
      matrix:
        os: [ubuntu-20.04,ubuntu-22.04,ubuntu-latest]
      
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run : |
        sudo apt-get update -qq
        sudo apt-get install -y libusb-1.0-0-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
  macos-build:
    name: macOS CI
    strategy:
      matrix:
        os: [macos-11,macos-12,macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
    
      - name: Install dependencies
        run: |
          brew update

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      

  windows-build:
            runs-on: windows-latest
            strategy:
              fail-fast: false
              matrix:
                include:
                  - { icon: 'â¬›', sys: mingw32 }
                  - { icon: 'ðŸŸ¦', sys: mingw64 }
                  - { icon: 'ðŸŸ¨', sys: ucrt64  }
                  - { icon: 'ðŸŸ§', sys: clang64 }
            name: ðŸš§${{ matrix.icon }} ${{ matrix.sys }}
            defaults:
              run:
                shell: msys2 {0}
            steps:
        
            - name: 'ðŸ§° Checkout'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
        
            - name: '${{ matrix.icon }} Setup MSYS2'
              uses: msys2/setup-msys2@v2
              with:
                msystem: ${{matrix.sys}}
                update: true
                install: >-
                  git
                  make
                pacboy: >-
                  toolchain:p
                  cmake:p
                  ninja:p
                  libusb:p

          
            - name: 'ðŸš§ Build TOOL'
              run: |
                cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=Release
                cmake --build build